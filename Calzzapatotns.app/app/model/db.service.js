"use strict";
var core_1 = require("@angular/core");
var Sqlite = require("nativescript-sqlite");
var DbService = (function () {
    function DbService() {
        var _this = this;
        this._version = 2;
        this.count = 0;
        this.count++;
        //console.log("entra a DBService", this.count);
        var version = this._version;
        (new Sqlite("calzzapato.db")).then(function (db) {
            db.resultType(Sqlite.RESULTSASOBJECT);
            db.version(function (err, ver) {
                if (ver !== version) {
                    db.version(version);
                    _this.createTables(db);
                }
            });
            _this._database = db;
        }, function (error) {
            //console.log("ERROR AL ABRIR LA BD", error);
        });
    }
    DbService.prototype.getDatabase = function () {
        return this._database;
    };
    DbService.prototype.createTables = function (db) {
        db.execSQL("CREATE TABLE IF NOT EXISTS user (id INTEGER, email VARCHAR(255), password VARCHAR(255), first_name VARCHAR(255), last_name VARCHAR(255), cliente_id INT(10), created_at TIMESTAMP, updated_at TIMESTAMP, solicitar TINYINT(1))");
        db.execSQL("CREATE TABLE IF NOT EXISTS cliente (id INTEGER, codigo INT(10), paterno VARCHAR(255), materno VARCHAR(255), nombre VARCHAR(255), rfc VARCHAR(255), plaza_id CHAR(2), tipocredito_id CHAR(2), cp CHAR(5), asentamiento_id INT(10), latitude DOUBLE, longitude DOUBLE)");
        db.execSQL("CREATE TABLE IF NOT EXISTS ventas (id INTEGER, codigo INT(10), fecha_asignacion TIMESTAMP, persona_autoriza VARCHAR(255), fecha_compra TIMESTAMP, lugar_compra VARCHAR(255), pago_quincenal DOUBLE)");
        db.execSQL("CREATE TABLE IF NOT EXISTS tipos_medio (id INTEGER, nombre VARCHAR(255))");
        db.execSQL("CREATE TABLE IF NOT EXISTS clientes_medios (id INTEGER, cliente_id INT(10), cliente_codigo INT(10), tipomedio_id INT(10), referencia VARCHAR(255), notas VARCHAR(255), estado TINYINT(1))");
    };
    DbService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], DbService);
    return DbService;
}());
exports.DbService = DbService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRiLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHFCQUF5QixlQUFlLENBQUMsQ0FBQTtBQUN6QyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUc1QztJQUtJO1FBTEosaUJBNENDO1FBekNXLGFBQVEsR0FBWSxDQUFDLENBQUM7UUFDdEIsVUFBSyxHQUFZLENBQUMsQ0FBQztRQUd2QixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDYiwrQ0FBK0M7UUFDL0MsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUc1QixDQUFDLElBQUksTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsRUFBRTtZQUVqQyxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUV0QyxFQUFFLENBQUMsT0FBTyxDQUFDLFVBQUMsR0FBRyxFQUFFLEdBQUc7Z0JBQ2hCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxPQUFPLENBQUMsQ0FBQyxDQUFDO29CQUNsQixFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO29CQUNwQixLQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUMxQixDQUFDO1lBRUwsQ0FBQyxDQUFDLENBQUM7WUFFSCxLQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUV4QixDQUFDLEVBQUUsVUFBQSxLQUFLO1lBRUosNkNBQTZDO1FBRWpELENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELCtCQUFXLEdBQVg7UUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBRU8sZ0NBQVksR0FBcEIsVUFBcUIsRUFBUTtRQUN6QixFQUFFLENBQUMsT0FBTyxDQUFDLGdPQUFnTyxDQUFDLENBQUM7UUFDN08sRUFBRSxDQUFDLE9BQU8sQ0FBQyxzUUFBc1EsQ0FBQyxDQUFDO1FBQ25SLEVBQUUsQ0FBQyxPQUFPLENBQUMscU1BQXFNLENBQUMsQ0FBQztRQUNsTixFQUFFLENBQUMsT0FBTyxDQUFDLDBFQUEwRSxDQUFDLENBQUM7UUFDdkYsRUFBRSxDQUFDLE9BQU8sQ0FBQywyTEFBMkwsQ0FBQyxDQUFDO0lBQzVNLENBQUM7SUE1Q0w7UUFBQyxpQkFBVSxFQUFFOztpQkFBQTtJQTZDYixnQkFBQztBQUFELENBQUMsQUE1Q0QsSUE0Q0M7QUE1Q1ksaUJBQVMsWUE0Q3JCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG52YXIgU3FsaXRlID0gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC1zcWxpdGVcIik7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEYlNlcnZpY2Uge1xuXG4gICAgcHJpdmF0ZSBfZGF0YWJhc2U6IGFueTtcbiAgICBwcml2YXRlIF92ZXJzaW9uIDogbnVtYmVyID0gMjtcbiAgICBwcml2YXRlIGNvdW50IDogbnVtYmVyID0gMDtcbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgICAgICB0aGlzLmNvdW50Kys7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJlbnRyYSBhIERCU2VydmljZVwiLCB0aGlzLmNvdW50KTtcbiAgICAgICAgdmFyIHZlcnNpb24gPSB0aGlzLl92ZXJzaW9uO1xuXG5cbiAgICAgICAgKG5ldyBTcWxpdGUoXCJjYWx6emFwYXRvLmRiXCIpKS50aGVuKGRiID0+IHtcblxuICAgICAgICAgICAgZGIucmVzdWx0VHlwZShTcWxpdGUuUkVTVUxUU0FTT0JKRUNUKTtcblxuICAgICAgICAgICAgZGIudmVyc2lvbigoZXJyLCB2ZXIpPT4ge1xuICAgICAgICAgICAgICAgIGlmICh2ZXIgIT09IHZlcnNpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgZGIudmVyc2lvbih2ZXJzaW9uKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVUYWJsZXMoZGIpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuX2RhdGFiYXNlID0gZGI7XG5cbiAgICAgICAgfSwgZXJyb3IgPT4ge1xuXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiRVJST1IgQUwgQUJSSVIgTEEgQkRcIiwgZXJyb3IpO1xuXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldERhdGFiYXNlKCkgOiBhbnl7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhYmFzZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNyZWF0ZVRhYmxlcyhkYiA6IGFueSl7XG4gICAgICAgIGRiLmV4ZWNTUUwoXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB1c2VyIChpZCBJTlRFR0VSLCBlbWFpbCBWQVJDSEFSKDI1NSksIHBhc3N3b3JkIFZBUkNIQVIoMjU1KSwgZmlyc3RfbmFtZSBWQVJDSEFSKDI1NSksIGxhc3RfbmFtZSBWQVJDSEFSKDI1NSksIGNsaWVudGVfaWQgSU5UKDEwKSwgY3JlYXRlZF9hdCBUSU1FU1RBTVAsIHVwZGF0ZWRfYXQgVElNRVNUQU1QLCBzb2xpY2l0YXIgVElOWUlOVCgxKSlcIik7XG4gICAgICAgIGRiLmV4ZWNTUUwoXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBjbGllbnRlIChpZCBJTlRFR0VSLCBjb2RpZ28gSU5UKDEwKSwgcGF0ZXJubyBWQVJDSEFSKDI1NSksIG1hdGVybm8gVkFSQ0hBUigyNTUpLCBub21icmUgVkFSQ0hBUigyNTUpLCByZmMgVkFSQ0hBUigyNTUpLCBwbGF6YV9pZCBDSEFSKDIpLCB0aXBvY3JlZGl0b19pZCBDSEFSKDIpLCBjcCBDSEFSKDUpLCBhc2VudGFtaWVudG9faWQgSU5UKDEwKSwgbGF0aXR1ZGUgRE9VQkxFLCBsb25naXR1ZGUgRE9VQkxFKVwiKTtcbiAgICAgICAgZGIuZXhlY1NRTChcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHZlbnRhcyAoaWQgSU5URUdFUiwgY29kaWdvIElOVCgxMCksIGZlY2hhX2FzaWduYWNpb24gVElNRVNUQU1QLCBwZXJzb25hX2F1dG9yaXphIFZBUkNIQVIoMjU1KSwgZmVjaGFfY29tcHJhIFRJTUVTVEFNUCwgbHVnYXJfY29tcHJhIFZBUkNIQVIoMjU1KSwgcGFnb19xdWluY2VuYWwgRE9VQkxFKVwiKTtcbiAgICAgICAgZGIuZXhlY1NRTChcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHRpcG9zX21lZGlvIChpZCBJTlRFR0VSLCBub21icmUgVkFSQ0hBUigyNTUpKVwiKTtcbiAgICAgICAgZGIuZXhlY1NRTChcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGNsaWVudGVzX21lZGlvcyAoaWQgSU5URUdFUiwgY2xpZW50ZV9pZCBJTlQoMTApLCBjbGllbnRlX2NvZGlnbyBJTlQoMTApLCB0aXBvbWVkaW9faWQgSU5UKDEwKSwgcmVmZXJlbmNpYSBWQVJDSEFSKDI1NSksIG5vdGFzIFZBUkNIQVIoMjU1KSwgZXN0YWRvIFRJTllJTlQoMSkpXCIpO1xuICAgIH1cbn0iXX0=